name: Release CI
description: Localazy GitHub Release CI

inputs:
  action:
    description: 'Possible actions: ''prepare'' or ''release''.'
    required: true

  app-id:
    description: GitHub app id.
    required: true

  app-key:
    description: GitHub app private key.
    required: true

  npm-publish:
    description: Publish to NPM registry.
    required: false
    default: 'false'

  npm-registry:
    description: NPM registry.
    required: false
    default: https://registry.npmjs.org

  npm-token:
    description: NPM auth token.
    required: false
    default: ''

  npm-build:
    description: Build package command. Only executed if ''npm-publish'' is set to ''true''.
    required: false
    default: 'npm run build'

  major-bump:
    description: Bump major version tag after release.
    required: false
    default: 'false'

  major-bump-tag-prefix:
    description: Major version tag prefix.
    required: false
    default: ''

runs:
  using: composite
  steps:

    #
    # INIT
    #

    - name: Set work folder permissions
      run: |
        pwd && sudo chown -R $USER:$USER ./
      shell: bash

    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - uses: tibdex/github-app-token@v1
      id: generate-token
      with:
        app_id: ${{ inputs.app-id }}
        private_key: ${{ inputs.app-key }}

    - name: Install dependencies
      run: npm ci --ignore-scripts
      shell: bash

    #
    # ACTION: PREPARE
    #

    - name: Bump package.json version
      if: inputs.action == 'prepare'
      id: bump
      run: |
        BUMP_TYPE=$(npx conventional-recommended-bump -p @localazy/conventional-changelog-preset)
        npm version $BUMP_TYPE --git-tag-version false
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        echo "package-version=$PACKAGE_VERSION" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Update CHANGELOG.md
      if: inputs.action == 'prepare'
      run: npx conventional-changelog -p @localazy/preset -u -i CHANGELOG.md -s
      shell: bash

    - name: Generate changelog preview for PR
      if: inputs.action == 'prepare'
      id: preview-changelog
      run: |
        {
          echo 'changelog<<EOF'
          npx conventional-changelog -p @localazy/preset -u
          echo EOF
        } >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Prepare release branch and create PR
      if: inputs.action == 'prepare'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ steps.generate-token.outputs.token }}
        branch: release
        labels: release-preview
        commit-message: "ðŸš€ release: ${{ steps.bump.outputs.package-version }}"
        title: ${{ steps.bump.outputs.package-version }}
        body: ${{ steps.preview-changelog.outputs.changelog }}

    #
    # ACTION: RELEASE
    #

    - name: Prepare release
      if: inputs.action == 'release'
      id: release-version
      run: |
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        echo "package-version=$PACKAGE_VERSION" >> "$GITHUB_OUTPUT"

        MAJOR_VERSION=${PACKAGE_VERSION%%.*}
        echo "major-version=$MAJOR_VERSION" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Generate changelog preview for PR
      if: inputs.action == 'prepare'
      id: release-changelog
      run: |
        {
          echo 'changelog<<EOF'
          npx conventional-changelog -p @localazy/preset -r 1
          echo EOF
        } > "$GITHUB_OUTPUT"
      shell: bash

    - name: Add version tag and publish GitHub release
      if: inputs.action == 'release'
      uses: ncipollo/release-action@v1
      with:
        name: ${{ steps.release-version.outputs.package-version }}
        tag: ${{ steps.release-version.outputs.package-version }}
        body: ${{ steps.release-changelog.outputs.changelog }}

    - name: Build NPM package
      if: inputs.action == 'release' && inputs.npm-publish == 'true'
      run: $(echo "${{ inputs.npm-build }}")
      shell: bash

    - name: Publish NPM package
      if: inputs.action == 'release' && inputs.npm-publish == 'true'
      uses: JS-DevTools/npm-publish@v1
      with:
        registry: ${{ inputs.npm-registry }}
        token: ${{ inputs.npm-token }}

    - name: Get major version and update tag
      if: inputs.action == 'release' && inputs.major-bump == 'true'
      run: |
        git tag -f "${{ inputs.major-bump-tag-prefix }}${{ steps.release-version.outputs.major-version }}"
        git push --delete origin "${{ inputs.major-bump-tag-prefix }}${{ steps.release-version.outputs.major-version }}"
        git push origin "${{ inputs.major-bump-tag-prefix }}${{ steps.release-version.outputs.major-version }}"
      shell: bash

    - name: Delete release branch
      if: inputs.action == 'release'
      run: git push origin -d release || true
      shell: bash
